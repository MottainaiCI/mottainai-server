# Author: Daniele Rondina, geaaru@sabayonlinux.org
# Description: Setup NGINX Proxy with custom reverse balancer and web contents.

version: "1"

template_engine:
  engine: "mottainai"

projects:

  - name: "mottainai-server-bionic"
    description: |
      Setup golang and run Mottainai Server Test Suite.

    vars:
      - envs:
          golang_version: "1.14"
          ppa_golang_repo: ppa:longsleep/golang-backports
          mottainai_branch: "develop"
          mottainai_giturl: "https://github.com/MottainaiCI/mottainai-server.git"

    groups:
      - name: "tests-bionic"
        description: "Mottainai Server test in Ubuntu Bionic"

        connection: "local"

        # Define the list of LXD Profile to use
        # for create the containers
        common_profiles:
          - default
          #- sdpool
          - net-mottainai0

        # Create the environment container as ephemeral or not.
        ephemeral: true

        nodes:
          - name: mserver1
            # ARM images or AMD64
            image_source: "ubuntu/18.04"
            # By deafult it use remote images"
            image_remote_server: "images"

            entrypoint:
              - "/bin/bash"
              - "-c"

            # List of commands executed just after the creation of the
            # container.
            hooks:

              - event: post-node-creation
                commands:
                  # DHCP seems slow
                  - sleep 5
                  - echo "deb http://archive.ubuntu.com/ubuntu bionic-backports main universe multiverse restricted" >> /etc/apt/sources.list
                  - apt-get update
                  - apt-get upgrade -y
                  - apt-get install -y software-properties-common
                  - apt-get update
                  - add-apt-repository ${ppa_golang_repo} -y
                  - apt-get update
                  - apt-get install -y git
                  - apt-get install -y gcc-arm-linux-gnueabi libc6-dev-armel-cross
                  - apt-get install -y libc6-armel-cross libc6-dev golang-1.14-go
                  - apt-get install -y libc6-dev-i386 libc6-dev-armhf-armel-cross linux-headers-generic
                  - apt-get install -y lib32gcc-5-dev libx32gcc-5-dev
                  # Fix asm/errno.h: No such file or directory on 386 build
                  - cp --archive /usr/include/asm-generic /usr/include/asm
                  - mkdir /gopath/src/github.com/MottainaiCi/ -p
                  - git clone ${mottainai_giturl} -b ${mottainai_branch} /gopath/src/github.com/MottainaiCi/mottainai-server


              - event: post-node-sync
                flags:
                  - test
                commands:
#                  - |
#                    cd /gopath/src/github.com/MottainaiCi/mottainai-server && \
#                    PATH=/usr/lib/go-1.14/bin:$PATH GOROOT="/usr/lib/go-1.14" \
#                    GOTOOLDIR="/usr/lib/go-1.14'/pkg/tool/linux_amd64" \
#                    GOPATH=/gopath \
#                    EXTENSIONS="lxd" make deps

                  - |
                    cd /gopath/src/github.com/MottainaiCi/mottainai-server && \
                    PATH=/usr/lib/go-1.14/bin:$PATH GOROOT="/usr/lib/go-1.14" \
                    GOTOOLDIR="/usr/lib/go-1.14'/pkg/tool/linux_amd64" \
                    GOPATH=/gopath \
                    EXTENSIONS="lxd" make build build-test

